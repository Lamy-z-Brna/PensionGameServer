// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PensionGame.DataAccess;

namespace PensionGame.Host.Migrations
{
    [DbContext(typeof(PensionGameDbContext))]
    [Migration("20210318210958_AddClientDataTables")]
    partial class AddClientDataTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameStateId")
                        .IsUnique();

                    b.ToTable("ClientData");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.ExpenseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChildrenExpenses")
                        .HasColumnType("int");

                    b.Property<int>("ClientDataId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraExpenses")
                        .HasColumnType("int");

                    b.Property<int>("LifeExpenses")
                        .HasColumnType("int");

                    b.Property<int>("LoanExpenses")
                        .HasColumnType("int");

                    b.Property<int>("Rent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientDataId")
                        .IsUnique();

                    b.ToTable("ExpenseData");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.IncomeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BondInterest")
                        .HasColumnType("int");

                    b.Property<int>("ClientDataId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraIncome")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("SavingsAccountInterest")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientDataId")
                        .IsUnique();

                    b.ToTable("IncomeData");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.GameData.GameState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.Holdings.ClientHoldings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientDataId")
                        .IsUnique();

                    b.ToTable("ClientHoldings");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.Session.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", b =>
                {
                    b.HasOne("PensionGame.DataAccess.Data_Objects.GameData.GameState", "GameState")
                        .WithOne("ClientData")
                        .HasForeignKey("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", "GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameState");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.ExpenseData", b =>
                {
                    b.HasOne("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", null)
                        .WithOne("ExpenseData")
                        .HasForeignKey("PensionGame.DataAccess.Data_Objects.ClientData.ExpenseData", "ClientDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.IncomeData", b =>
                {
                    b.HasOne("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", null)
                        .WithOne("IncomeData")
                        .HasForeignKey("PensionGame.DataAccess.Data_Objects.ClientData.IncomeData", "ClientDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.GameData.GameState", b =>
                {
                    b.HasOne("PensionGame.DataAccess.Data_Objects.Session.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.Holdings.ClientHoldings", b =>
                {
                    b.HasOne("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", null)
                        .WithOne("ClientHoldings")
                        .HasForeignKey("PensionGame.DataAccess.Data_Objects.Holdings.ClientHoldings", "ClientDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.ClientData.ClientData", b =>
                {
                    b.Navigation("ClientHoldings");

                    b.Navigation("ExpenseData");

                    b.Navigation("IncomeData");
                });

            modelBuilder.Entity("PensionGame.DataAccess.Data_Objects.GameData.GameState", b =>
                {
                    b.Navigation("ClientData");
                });
#pragma warning restore 612, 618
        }
    }
}
