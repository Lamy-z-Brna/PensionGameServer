@page "/game/{sessionId}"
@using PensionGame.Web.Services

@inject GameDataServices GameService


<h1>Pension game</h1>

@if (success.HasValue)
{
    if (success.Value)
    {
        <p class="alert-success">
            Step executed successfuly!
        </p>
    }
    else
    {
        <p class="alert-danger">
            Step failed!
        </p>
    }
}
@if (!validationOkay)
{
    <p class="alert-danger">
        Incorrect values!
    </p>
}
<EditForm EditContext="@editContext" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    @if (gameData != null)
    {
        <div class="alert-info">
            @foreach (var @event in gameData.Events)
            {
                <p>@(@event.DisplayMessage)</p>
            }
        </div>
        <div class="game-state-info">
            <label>
                Year:
            </label>
            <h4>
                @gameData.Year
            </h4>
        </div>
        <div class="game-state-info">
            <label>
                Income:
            </label>
            <h4>
                @gameData.ClientData.IncomeData.TotalIncome
            </h4>
        </div>
        <div class="game-state-info">
            <label>
                Expenses:
            </label>
            <h4>
                @gameData.ClientData.ExpenseData.TotalExpenses
            </h4>
        </div>
        <div class="game-state-info">
            <label>
                Total Cash-flow:
            </label>
            <h4>
                @TotalCashFlow
            </h4>
        </div>
    }

    <h3>Portfolio</h3>

    <table class="invesment-selection-table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Current Holdings</th>
                <th>Investment Selection</th>
                <th>Rates</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="invesment-selection-table-name">Stocks</td>
                <td>
                    @gameData?.ClientData.ClientHoldings.Stocks.Value
                    (@gameData?.ClientData.ClientHoldings.Stocks.UnitsHeld units per @gameData?.ClientData.ClientHoldings.Stocks.UnitPrice)
                </td>
                <td>
                    <InputNumber @bind-Value="investmentSelection.StockValue" />
                </td>
                <td>
                    <strong>@gameData?.MarketData.ReturnData.StockRate.ToString("P1")</strong>
                    (last year's return rate)
                </td>
            </tr>
            <tr>
                <td class="invesment-selection-table-name">Bonds</td>
                <td>
                    @if (gameData != null && gameData?.ClientData.ClientHoldings.Bonds.Count() > 0)
                    {
                        <span>
                            @gameData.ClientData.ClientHoldings.Bonds.Count() bonds, @gameData.ClientData.ClientHoldings.Bonds.Sum(b => b.YearlyPayment) yearly
                        </span>
                        <ul>
                            @foreach (var bond in gameData.ClientData.ClientHoldings.Bonds)
                            {
                                <li>@bond.YearlyPayment yearly (expires in @bond.YearsToExpiration years)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>
                            0 bonds
                        </span>
                    }
                </td>
                <td><InputNumber @bind-Value="investmentSelection.BondValue" /></td>
                <td>
                    <strong>@gameData?.MarketData.ReturnData.BondRate.ToString("P1")</strong>
                    (return rate)
                </td>
            </tr>
            <tr>
                <td class="invesment-selection-table-name">Savings Account</td>
                <td>@gameData?.ClientData.ClientHoldings.SavingsAccount.Amount</td>
                <td>
                    <InputNumber @bind-Value="investmentSelection.SavingsAccountValue" />
                </td>
                <td>
                    <strong>@gameData?.MarketData.ReturnData.SavingsAccountRate.ToString("P1")</strong>
                    (interest rate)
                </td>
            </tr>
            <tr>
                <td class="invesment-selection-table-name">Loans</td>
                <td>
                    @gameData?.ClientData.ClientHoldings.Loans.Sum(l => l.Amount)
                    @if (gameData != null)
                    {
                        <ul>
                            @foreach (var loan in gameData.ClientData.ClientHoldings.Loans)
                            {
                                <li>@loan.Amount (@loan.InterestRate.ToString("P1"))</li>
                            }
                        </ul>
                    }
                </td>
                <td>
                    <InputNumber @bind-Value="investmentSelection.LoanValue" />
                </td>
                <td>
                    <strong>@gameData?.MarketData.ReturnData.LoanRate.ToString("P1")</strong>
                    (loan interest rate)
                </td>
            </tr>
        </tbody>
    </table>

    @*    <p>
            <div class="d-inline-block">
                <div>
                    Stocks:
                </div>
                <div>
                    <InputNumber @bind-Value="investmentSelection.StockValue" />
                </div>
            </div>
            <div class="d-inline-block" style="margin-left: 10px">
                <div>
                    Last year's return rate:
                </div>
                <div>
                    <strong>@gameData?.MarketData.ReturnData.StockRate.ToString("P1")</strong>
                </div>
            </div>
        </p>
        <p>
            <div class="d-inline-block">
                <div>
                    Bonds:
                </div>
                <div>
                    <InputNumber @bind-Value="investmentSelection.BondValue" />
                </div>
            </div>
            <div class="d-inline-block" style="margin-left: 10px">
                <div>
                    Return rate:
                </div>
                <div>
                    <strong>@gameData?.MarketData.ReturnData.BondRate.ToString("P1")</strong>
                </div>
            </div>
        </p>
        <p>
            <div class="d-inline-block">
                <div>
                    Savings account:
                </div>
                <div>
                    <InputNumber @bind-Value="investmentSelection.SavingsAccountValue" />
                </div>
            </div>
            <div class="d-inline-block" style="margin-left: 10px">
                <div>
                    Interest rate:
                </div>
                <div>
                    <strong>@gameData?.MarketData.ReturnData.SavingsAccountRate.ToString("P1")</strong>
                </div>
            </div>
        </p>

        <h3>Would you like to take a loan?</h3>
        <p>
            <div class="d-inline-block">
                <div>
                    Loan:
                </div>
                <div>
                    <InputNumber @bind-Value="investmentSelection.LoanValue" />
                </div>
            </div>
            <div class="d-inline-block" style="margin-left: 10px">
                <div>
                    Loan interest rate:
                </div>
                <div>
                    <strong>@gameData?.MarketData.ReturnData.LoanRate.ToString("P1")</strong>
                </div>
            </div>
        </p>*@

    @if (gameData != null)
    {
        @*<p>
                <label>
                    Remaining Cash-flow:
                </label>
                <div>
                    @RemainingCashFlow
                </div>
            </p>*@
        <div>
            <div class="game-state-info">
                <label>
                    Remaining Cash-flow:
                </label>
                <h4>
                    @RemainingCashFlow
                </h4>
            </div>
        </div>
    }
    <button type="submit">Submit</button>
</EditForm>
