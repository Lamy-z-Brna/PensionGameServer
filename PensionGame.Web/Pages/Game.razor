@page "/game/{sessionId}"
@using PensionGame.Web.Services
@using PensionGame.Web.Components
@using PensionGame.Web.Enums
@using Blazorise

@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject GameDataServices GameService

<h1>Pension game</h1>

<ValidationResult ResultModel="@ValidationResult" />

<EditForm EditContext="@EditContext">
    <DataAnnotationsValidator />
    <Blazorise.ValidationSummary />

    @if (GameData != null && GameHistory != null)
    {
        @if (!GameData.IsInitial)
        {
            <Modal @ref="ModalWindow">
                <ModalContent Centered="true">
                    <ModalHeader>
                        <ModalTitle>Age: @GameData.Year</ModalTitle>
                        <CloseButton />
                    </ModalHeader>
                    <ModalBody>
                        @foreach (var @event in GameData.Events)
                        {
                            <PensionGame.Web.Components.Alert Type="@(@event.EventType == Api.Domain.Resources.Events.EventType.Info
                                            ? AlertType.Info
                                            : (@event.EventType == Api.Domain.Resources.Events.EventType.Negative
                                                ? AlertType.Danger
                                                : AlertType.Success))"
                                                              Title="Event occured"
                                                              DisplayMessage="@(@event.DisplayMessage)" />
                        }

                        <PensionGame.Web.Components.Card>
                            <SimpleLineChart Title="Stock Performance"
                                             Label="Stock Price"
                                             XLabel="Age"
                                             YLabel="Stock Price"
                                             DataLabels="@GameHistory.Keys.Select(key => key.ToString()).ToList()"
                                             Data="@GameHistory.Values.Select(gameState => (decimal)gameState.ClientData.ClientHoldings.Stocks.UnitPrice.Price).ToList()" />
                        </PensionGame.Web.Components.Card>
                        <PensionGame.Web.Components.Card>
                            <ClientHoldingsChart ClientHoldingsHistory="@ClientHoldingsHistory"
                                                 Title="Portfolio growth" />
                        </PensionGame.Web.Components.Card>
                    </ModalBody>
                    <ModalFooter>
                        <Button Color="Color.Primary" Clicked="@HideModal">OK</Button>
                    </ModalFooter>
                </ModalContent>
            </Modal>
        }

        <h4>Age: @GameData.Year</h4>
        <IncomeExpensesCard ClientData="@GameData.ClientData" DisposableIncome="@DisposableIncome"></IncomeExpensesCard>

        @if (!GameData.IsInitial)
        {
            <button class="btn btn-secondary" @onclick="ShowModal">Display info</button>
        }
    }

    <h3>Portfolio</h3>

    <table class="data-table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Current Holdings</th>
                <th>Investment Selection</th>
                <th>Rates</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="data-table-name">
                    <span>Stocks </span>
                    <PensionGame.Web.Components.Tooltip Text="@StocksInfo">
                        <InfoIcon />
                    </PensionGame.Web.Components.Tooltip>
                </td>
                <td>
                    @ClientHoldings?.Stocks.Value
                    (@ClientHoldings?.Stocks.UnitsHeld units per @ClientHoldings?.Stocks.UnitPrice.Price)
                </td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.StockValue" />
                </td>
                @if (!(GameData?.IsInitial ?? true))
                {
                    <td>
                        <strong>@GameData?.MarketData.ReturnData.StockRate.ToString("P1")</strong>
                        (last year's return rate)
                    </td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="data-table-name">
                    <span>Bonds </span>
                    <PensionGame.Web.Components.Tooltip Text="@BondsInfo">
                        <InfoIcon />
                    </PensionGame.Web.Components.Tooltip>
                </td>
                <td>
                    @if (ClientHoldings != null && ClientHoldings.Bonds.Any())
                    {
                        <span>
                            @ClientHoldings.Bonds.Count bonds, @ClientHoldings.Bonds.Sum(b => b.YearlyPayment) yearly
                        </span>
                        <ul>
                            @foreach (var bond in ClientHoldings.Bonds)
                            {
                                <li>@bond.YearlyPayment yearly (expires @(bond.YearsToExpiration == 1 ? "this year" : $"in {bond.YearsToExpiration} years")</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>
                            0 bonds
                        </span>
                    }
                </td>
                <td><InputNumber @bind-Value="InvestmentSelection.BondValue" /></td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.BondRate.ToString("P1")</strong>
                    (return rate)
                </td>
            </tr>
            <tr>
                <td class="data-table-name">
                    <span>Savings Account</span>
                    <PensionGame.Web.Components.Tooltip Text="@SavingsAccountInfo">
                        <InfoIcon />
                    </PensionGame.Web.Components.Tooltip>
                </td>
                <td>@ClientHoldings?.SavingsAccount.Amount</td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.SavingsAccountValue" />
                </td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.SavingsAccountRate.ToString("P1")</strong>
                    (interest rate)
                </td>
            </tr>
            <tr>
                <td class="data-table-name">
                    <span>Loans </span>
                    <PensionGame.Web.Components.Tooltip Text="@LoansInfo">
                        <InfoIcon />
                    </PensionGame.Web.Components.Tooltip>
                </td>
                <td>
                    @ClientHoldings?.Loans.TotalLoanValue
                    @if (GameData != null)
                    {
                        <ul>
                            @foreach (var loan in GameData.ClientData.ClientHoldings.Loans)
                            {
                                <li>@loan.Amount (@loan.InterestRate.ToString("P1"))</li>
                            }
                        </ul>
                    }
                </td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.LoanValue" />
                </td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.LoanRate.ToString("P1")</strong>
                    (loan interest rate)
                </td>
            </tr>
        </tbody>
    </table>

    @if (GameData != null)
    {
        <div>
            <div class="game-state-info">
                <label>
                    Available to invest:
                </label>
                <h4>
                    @AvailableToInvest
                </h4>
            </div>
        </div>
    }

    <SubmitButton IsDisabled="@(!IsValid)" OnSubmit="@HandleValidSubmit" />
</EditForm>
