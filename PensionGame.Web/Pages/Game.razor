@page "/game/{sessionId}"
@using PensionGame.Web.Services
@using PensionGame.Web.Components

@inject GameDataServices GameService


<h1>Pension game</h1>

<ValidationResult ResultModel="@ValidationResult" />

<EditForm EditContext="@EditContext">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (GameData != null)
    {
        <div class="alert-info">
            @foreach (var @event in GameData.Events)
            {
                <p>@(@event.DisplayMessage)</p>
            }
        </div>
        <div class="game-state-info">
            <label>
                Year:
            </label>
            <h4>
                @GameData.Year
            </h4>
        </div>
        <div class="game-state-info">
            <label>
                Income:
            </label>
            <h4>
                @GameData.ClientData.IncomeData.TotalIncome
            </h4>
            <ul>
                <li>Salary paid out: @GameData.ClientData.IncomeData.ActualSalary</li>
                <li>Bond interest: @GameData.ClientData.IncomeData.BondInterest</li>
                <li>Savings account interest: @GameData.ClientData.IncomeData.SavingsAccountInterest</li>
                <li>Additional income: @GameData.ClientData.IncomeData.ExtraIncome</li>
            </ul>
        </div>
        <div class="game-state-info">
            <label>
                Expenses:
            </label>
            <h4>
                @GameData.ClientData.ExpenseData.TotalExpenses
            </h4>
            <ul>
                <li>Life expenses: @GameData.ClientData.ExpenseData.LifeExpenses</li>
                <li>Loan interest: @GameData.ClientData.ExpenseData.LoanExpenses</li>
                <li>Rent: @GameData.ClientData.ExpenseData.Rent</li>
                <li>Extra expenses: @GameData.ClientData.ExpenseData.ExtraExpenses</li>
            </ul>
        </div>
        <div class="game-state-info">
            <label>
                Disposable income:
            </label>
            <h4>
                @DisposableIncome
            </h4>
        </div>
    }

    <h3>Portfolio</h3>

    <table class="data-table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Current Holdings</th>
                <th>Investment Selection</th>
                <th>Rates</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="data-table-name">Stocks <Tooltip Text="@StocksInfo">&#65110</Tooltip></td>
                <td>
                    @ClientHoldings?.Stocks.Value
                    (@ClientHoldings?.Stocks.UnitsHeld units per @ClientHoldings?.Stocks.UnitPrice.Price)
                </td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.StockValue" />
                </td>
                @if (!(GameData?.IsInitial ?? true))
                {
                    <td>
                        <strong>@GameData?.MarketData.ReturnData.StockRate.ToString("P1")</strong>
                        (last year's return rate)
                    </td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="data-table-name">Bonds <Tooltip Text="@BondsInfo">&#65110</Tooltip></td>
                <td>
                    @if (ClientHoldings != null && ClientHoldings.Bonds.Any())
                    {
                        <span>
                            @ClientHoldings.Bonds.Count() bonds, @ClientHoldings.Bonds.Sum(b => b.YearlyPayment) yearly
                        </span>
                        <ul>
                            @foreach (var bond in ClientHoldings.Bonds)
                            {
                                <li>@bond.YearlyPayment yearly (expires @(bond.YearsToExpiration == 1 ? "this year" : $"in {bond.YearsToExpiration} years")</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>
                            0 bonds
                        </span>
                    }
                </td>
                <td><InputNumber @bind-Value="InvestmentSelection.BondValue" /></td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.BondRate.ToString("P1")</strong>
                    (return rate)
                </td>
            </tr>
            <tr>
                <td class="data-table-name">Savings Account <Tooltip Text="@SavingsAccountInfo">&#65110</Tooltip></td>
                <td>@ClientHoldings?.SavingsAccount.Amount</td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.SavingsAccountValue" />
                </td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.SavingsAccountRate.ToString("P1")</strong>
                    (interest rate)
                </td>
            </tr>
            <tr>
                <td class="data-table-name">Loans <Tooltip Text="@LoansInfo">&#65110</Tooltip></td>
                <td>
                    @ClientHoldings?.Loans.TotalLoanValue
                    @if (GameData != null)
                    {
                        <ul>
                            @foreach (var loan in GameData.ClientData.ClientHoldings.Loans)
                            {
                                <li>@loan.Amount (@loan.InterestRate.ToString("P1"))</li>
                            }
                        </ul>
                    }
                </td>
                <td>
                    <InputNumber @bind-Value="InvestmentSelection.LoanValue" />
                </td>
                <td>
                    <strong>@GameData?.MarketData.ReturnData.LoanRate.ToString("P1")</strong>
                    (loan interest rate)
                </td>
            </tr>
        </tbody>
    </table>

    @if (GameData != null)
    {
        <div>
            <div class="game-state-info">
                <label>
                    Available to invest:
                </label>
                <h4>
                    @AvailableToInvest
                </h4>
            </div>
        </div>
    }

    <SubmitButton IsDisabled="@(!IsValid)" OnSubmit="@HandleValidSubmit" />
</EditForm>
