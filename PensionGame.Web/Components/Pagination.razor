@typeparam TItem
@using Helpers

@if (@Items != null)
{
    <div class="fixed-table-pagination" style="">
        <div class="btn-group">
            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @Items.CurrentItems
            </button>
            <div class="dropdown-menu" style="">
                <a class="dropdown-item" href="" @onclick="() => InvokeOnPageSizeChanged(10)" @onclick:preventDefault>10</a>
                <a class="dropdown-item" href="" @onclick="() => InvokeOnPageSizeChanged(25)" @onclick:preventDefault>25</a>
                <a class="dropdown-item" href="" @onclick="() => InvokeOnPageSizeChanged(50)" @onclick:preventDefault>50</a>
            </div>
        </div>
        <div class="float-right pagination">
            @foreach (var pageGroup in Items.ToPageNumbers())
            {
                var (pages, none) = pageGroup;
                if (pages != null)
                {
                    <div class="btn-group me-2" role="group">
                        @foreach (var item in pages.Value)
                        {
                            <button type="button" class="@(Items.CurrentPage == item ? "btn btn-primary" : "btn btn-secondary")" @onclick="() => InvokeOnPageClicked(item)">@item</button>
                        }
                    </div>
                }
                else
                {
                    <div class="btn-group me-2" role="group">
                        <button type="button" class="btn btn-secondary" disabled>...</button>
                    </div>
                }
            }
            </div>
    </div>
}